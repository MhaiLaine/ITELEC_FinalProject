@{
    Layout = "~/Views/Shared/_StudyFlashcardsLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Study Flashcards</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/Content/studyflashcards.css">
</head>
<body>
    <div class="container">
        <!-- Close Button -->
        <a href="@Url.Action("Dashboard1", "Home")" class="close-button">✖</a>
        <div class="header">
            <span id="currentCard">1</span> / <span id="totalCards">3</span> Flashcards
        </div>

        <!-- Flashcard Content -->
        <div class="flashcard" id="flashcard">
            <p id="flashcardText">Hi</p>
        </div>

        <!-- Buttons -->
        <div class="button-container">
            <div id="difficultyButtons" class="hidden">
                <button class="btn btn-success" onclick="markDifficulty('easy')">Easy</button>
                <button class="btn btn-danger" onclick="markDifficulty('hard')">Hard</button>
                <button class="btn btn-warning" onclick="markDifficulty('skip')">Skip</button>
            </div>
        </div>

        <!-- Navigation -->
        <div class="navigation">
            <div class="button-navigation-container">
                <div class="navigation">
                    <button class="nav-button" onclick="navigate('prev')">←</button>
                    <button id="summonButton" class="action-button" onclick="revealAnswer()">Summon Answer</button>
                    <button class="nav-button" onclick="navigate('next')">→</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Summary Popup -->
    <div class="modal fade" id="summaryModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Flashcard Summary</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Easy: <span id="easyCount">0</span></p>
                    <p>Hard: <span id="hardCount">0</span></p>
                    <p>Skipped: <span id="skipCount">0</span></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const flashcards = [
            { front: "Hi", back: "Hello" },
            { front: "Merry", back: "Christmas!" },
            { front: "Happy", back: "New Year!" }
        ];

        let currentCardIndex = 0;
        let summary = { easy: 0, hard: 0, skip: 0 };

        function updateFlashcard() {
            const flashcardText = document.getElementById('flashcardText');
            flashcardText.textContent = flashcards[currentCardIndex].front;
            document.getElementById('currentCard').textContent = currentCardIndex + 1;
        }

        function revealAnswer() {
            const flashcardText = document.getElementById('flashcardText');
            flashcardText.textContent = flashcards[currentCardIndex].back;
            document.getElementById('summonButton').classList.add('hidden');
            document.getElementById('difficultyButtons').classList.remove('hidden');

            // Hide navigation buttons after answer is revealed
            document.querySelectorAll('.nav-button').forEach(button => button.classList.add('hidden'));
        }


        function markDifficulty(difficulty) {
            summary[difficulty]++;
            document.getElementById('summonButton').classList.remove('hidden');
            document.getElementById('difficultyButtons').classList.add('hidden');
            navigate('next');
        }

        function navigate(direction) {
            // Show the navigation arrows again when navigating to a new flashcard
            document.querySelectorAll('.nav-button').forEach(button => button.classList.remove('hidden'));

            if (direction === 'next') {
                if (currentCardIndex < flashcards.length - 1) {
                    currentCardIndex++;
                } else {
                    showSummary();
                    return;
                }
            } else if (direction === 'prev' && currentCardIndex > 0) {
                currentCardIndex--;
            }

            updateFlashcard();
        }


        function showSummary() {
            document.getElementById('easyCount').textContent = summary.easy;
            document.getElementById('hardCount').textContent = summary.hard;
            document.getElementById('skipCount').textContent = summary.skip;
            const summaryModal = new bootstrap.Modal(document.getElementById('summaryModal'));
            summaryModal.show();
        }

        // Initialize the flashcards
        updateFlashcard();
    </script>
</body>
</html>





<!--
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Study SpellCards</title>
    <!-- Bootstrap CSS
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

    <div class="container-fluid">

        <!-- Button that navigates to Dashboard
        <a href="Url.Action("Dashboard1", "Home")" class="close-button">✖</a>
        <div class="header">
            <span id="currentCard">0</span> / <span id="totalCards">0</span> SpellCards
        </div>

        <div class="flashcard" onclick="handleCardClick(event)">
            <div class="card-content">
                <div id="summonButton" class="button-container">
                    <button class="action-button" onclick="handleSummonClick(event)">
                        Summon Answer
                    </button>
                </div>
                <div id="difficultyButtons" class="button-container hidden">
                    <button class="difficulty-button easy-button" onclick="handleDifficulty('easy')">
                        Easy
                    </button>
                    <button class="difficulty-button hard-button" onclick="handleDifficulty('hard')">
                        Hard
                    </button>
                </div>
            </div>
        </div>

        <div class="navigation">
            <button class="nav-button" onclick="navigate('prev')">←</button>
            <button class="nav-button" onclick="navigate('next')">→</button>
        </div>
    </div>

    <!-- Bootstrap JS
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
-->
<script>
    /*let currentCardIndex = 0;
      const totalCards = 0;

      function handleCardClick(event) {
          // Prevent click handling if clicking buttons
          if (event.target.tagName === 'BUTTON') return;
      }

      function handleSummonClick(event) {
          event.stopPropagation();
          document.getElementById('summonButton').classList.add('hidden');
          document.getElementById('difficultyButtons').classList.remove('hidden');
      }

      function handleDifficulty(difficulty) {
          console.log('Selected difficulty:', difficulty);
          resetCard();
          if (currentCardIndex < totalCards) {
              navigate('next');
          }
      }

      function resetCard() {
          document.getElementById('difficultyButtons').classList.add('hidden');
          document.getElementById('summonButton').classList.remove('hidden');
      }

      function navigate(direction) {
          resetCard();

          if (direction === 'next' && currentCardIndex < totalCards) {
              currentCardIndex++;
          } else if (direction === 'prev' && currentCardIndex > 1) {
              currentCardIndex--;
          }

          document.getElementById('currentCard').textContent = currentCardIndex;
      }

       function closeStudy() {
              // Temporarily use a simple redirect to check if the function works
              console.log('Close Study clicked');
              window.location.href = 'Url.Action("Index", "Home")'; // Redirect to home page
       }

       document.addEventListener('DOMContentLoaded', function () {
      const deckID = 'ViewBag.DeckID'; // Get deck ID from the server-side

      // Fetch flashcards for the deck
      fetch(`/Flashcard/GetFlashcardsByDeck?deckID=${deckID}`)
          .then(response => response.json())
          .then(data => {
              // Handle the response and populate the flashcards
              console.log("Flashcards:", data);

              // For simplicity, assume 'data' is an array of flashcards
              const flashcards = data.flashcards; // This should contain the front and back cards
              if (flashcards.length > 0) {
                  // Set total number of flashcards
                  document.getElementById('totalCards').textContent = flashcards.length;

                  // Initialize the first card
                  loadFlashcard(flashcards[0]);
              }
          })
          .catch(error => {
              console.error("Failed to load flashcards:", error);
          });

      let currentCardIndex = 0;
      let flashcards = [];

      // Load the flashcard content dynamically
      function loadFlashcard(card) {
          // Show front card by default
          document.querySelector('.flashcard .card-content').innerHTML = `
              <h2>${card.frontCard}</h2>
              <button onclick="handleSummonClick(event)">Summon Answer</button>
          `;
      }

      // Handle the Summon Answer button click
      function handleSummonClick(event) {
          event.stopPropagation();
          document.querySelector('.flashcard .card-content').innerHTML = `
              <h2>${flashcards[currentCardIndex].backCard}</h2>
              <button onclick="handleDifficulty('easy')">Easy</button>
              <button onclick="handleDifficulty('hard')">Hard</button>
              <button onclick="handleDifficulty('skip')">Skip</button>
          `;
      }

      function handleDifficulty(difficulty) {
          console.log('Selected difficulty:', difficulty);
          navigate('next');
      }

      function navigate(direction) {
          if (direction === 'next' && currentCardIndex < flashcards.length - 1) {
              currentCardIndex++;
          } else if (direction === 'prev' && currentCardIndex > 0) {
              currentCardIndex--;
          }

          loadFlashcard(flashcards[currentCardIndex]);
      }
  });


      const flashcards = [
          { front: "Happy", back: "Holidays!" },
          { front: "Happy", back: "New Year!" },
          { front: "Hi", back: "Hello" }
      ];
      let currentCardIndex = 0;
      let stats = { easy: 0, hard: 0, skip: 0 };

      function updateFlashcardDisplay() {
          const front = document.querySelector('.flashcard .front');
          const back = document.querySelector('.flashcard .back');
          front.textContent = flashcards[currentCardIndex].front;
          back.textContent = flashcards[currentCardIndex].back;
          document.getElementById('currentCard').textContent = currentCardIndex + 1;
          document.getElementById('totalCards').textContent = flashcards.length;
      }

      function handleSummonClick() {
          document.querySelector('.flashcard .back').style.display = 'block';
          document.getElementById('difficultyButtons').classList.remove('hidden');
          document.getElementById('summonButton').classList.add('hidden');
      }

      function handleDifficulty(difficulty) {
          stats[difficulty]++;
          navigate('next');
      }

      function navigate(direction) {
          document.querySelector('.flashcard .back').style.display = 'none';
          document.getElementById('difficultyButtons').classList.add('hidden');
          document.getElementById('summonButton').classList.remove('hidden');

          if (direction === 'next' && currentCardIndex < flashcards.length - 1) {
              currentCardIndex++;
          } else if (direction === 'prev' && currentCardIndex > 0) {
              currentCardIndex--;
          }
          updateFlashcardDisplay();
      }

      function summarizeStats() {
          alert(`Summary:
  Easy: ${stats.easy}
  Hard: ${stats.hard}
  Skipped: ${stats.skip}`);
      }

      document.addEventListener('DOMContentLoaded', () => {
          updateFlashcardDisplay();
      });

      */
</script>

