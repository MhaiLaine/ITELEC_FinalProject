@{
    Layout = "~/Views/Shared/_StudyFlashcardsLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Study SpellCards</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container-fluid">
        <button class="close-button" onclick="closeStudy()">✖</button>
        <div class="header">
            <span id="currentCard">1</span> / <span id="totalCards">25</span> SpellCards
        </div>

        <div class="flashcard" onclick="handleCardClick(event)">
            <div class="card-content">
                <div id="summonButton" class="button-container">
                    <button class="action-button" onclick="handleSummonClick(event)">
                        Summon Answer
                    </button>
                </div>
                <div id="difficultyButtons" class="button-container hidden">
                    <button class="difficulty-button easy-button" onclick="handleDifficulty('easy')">
                        Easy
                    </button>
                    <button class="difficulty-button hard-button" onclick="handleDifficulty('hard')">
                        Hard
                    </button>
                </div>
            </div>
        </div>

        <div class="navigation">
            <button class="nav-button" onclick="navigate('prev')">←</button>
            <button class="nav-button" onclick="navigate('next')">→</button>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<script>
    let currentCardIndex = 0;
    const totalCards = 25;

    function handleCardClick(event) {
        // Prevent click handling if clicking buttons
        if (event.target.tagName === 'BUTTON') return;
    }

    function handleSummonClick(event) {
        event.stopPropagation();
        document.getElementById('summonButton').classList.add('hidden');
        document.getElementById('difficultyButtons').classList.remove('hidden');
    }

    function handleDifficulty(difficulty) {
        console.log('Selected difficulty:', difficulty);
        resetCard();
        if (currentCardIndex < totalCards) {
            navigate('next');
        }
    }

    function resetCard() {
        document.getElementById('difficultyButtons').classList.add('hidden');
        document.getElementById('summonButton').classList.remove('hidden');
    }

    function navigate(direction) {
        resetCard();

        if (direction === 'next' && currentCardIndex < totalCards) {
            currentCardIndex++;
        } else if (direction === 'prev' && currentCardIndex > 1) {
            currentCardIndex--;
        }

        document.getElementById('currentCard').textContent = currentCardIndex;
    }

    function closeStudy() {
        // Implement close functionality
        console.log('Close clicked');
    }
</script>
